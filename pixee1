import requests
import pandas as pd

# API details
API_URL = "https://dependencytrackapi.crm.com/api/v1/project"
API_TOKEN = "your_token"  # Replace with your actual token
HEADERS = {
    "X-Api-Key": API_TOKEN,
    "Content-Type": "application/json",
    "Accept": "application/json"
}

def fetch_all_projects():
    """Fetch all pages of projects from Dependency Track API."""
    all_data = []
    page = 1
    limit = 100  # Number of records per request

    while True:
        params = {"page": page, "limit": limit}  # Pagination parameters
        try:
            response = requests.get(API_URL, headers=HEADERS, params=params)
            response.raise_for_status()
            data = response.json()

            if not data:
                break  # Stop if no more records
            
            all_data.extend(data)  # Append current batch to full list

            print(f"Fetched {len(data)} records from page {page}")

            # Stop if fewer than 'limit' records are returned (last page)
            if len(data) < limit:
                break

            page += 1  # Move to next page
        except requests.exceptions.RequestException as e:
            print(f"Error fetching data: {e}")
            break

    return all_data

def main():
    # Fetch all projects
    all_projects = fetch_all_projects()

    print(f"Found {len(all_projects)} projects.")

    # Convert to DataFrame and save to Excel
    if all_projects:
        df = pd.json_normalize(all_projects)
        df.to_excel("all_projects.xlsx", index=False)
        print("All projects saved to all_projects.xlsx")
    else:
        print("No projects found.")

if __name__ == "__main__":
    main()